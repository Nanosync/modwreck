{"version":3,"sources":["redux/reducers/SettingsReducer.js","redux/reducers/index.js","redux/types/index.js","redux/reducers/QuestionsReducer.js","redux/store.js","components/Welcome/index.js","apis/question.js","components/Settings/index.js","redux/actions/index.js","components/Game/Result.js","components/Game/Timer.js","components/Game/GameOver.js","components/Game/index.js","App.js","index.js"],"names":["DEFAULT_GAME_SETTINGS","numberOfQuestions","time","category","combineReducers","settings","state","action","type","payload","questions","data","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","Welcome","props","className","Button","component","Link","to","variant","color","size","fullWidth","Component","getQuestions","a","async","fetch","response","json","Settings","this","classes","class","Card","raised","FormControl","formControl","InputLabel","id","Select","labelId","value","onChange","e","setNumberOfQuestions","target","MenuItem","setTime","setCategory","withStyles","theme","margin","spacing","minWidth","selectEmpty","marginTop","connect","ownProps","numQuestions","withRouter","score","playAgain","onClick","React","GameOver","handleChange","nam","name","val","setState","handleSubmit","preventDefault","disableButtton","console","log","nameInput","timeTaken","questionSet","answers","map","i","index","answerMod","invalidAnswer","length","moduleCode","ExpansionPanel","ExpansionPanelSummary","greenBackGround","expandIcon","title","ExpansionPanelDetails","description","redBackGround","scoreBackGround","toFixed","renderQuestion","background","borderRadius","Game","computeAnswer","answer","correctAnswer","result","prevState","feedback","responses","scrollTo","showResult","question","startTime","Date","getTime","exitGame","handleTimeout","endTime","slice","filter","trim","endsWith","faculty","includes","sort","Math","random","userInputValue","currentTarget","item","getQuestionSet","push","shuffled","feedbackClasses","Grid","container","direction","xs","substring","indexOf","isPlaying","durationSeconds","colors","renderTime","remainingTime","onComplete","root","handleClick","fontWeight","dispatch","getQuestionFromSite","App","basename","process","TransitionGroup","CSSTransition","timeout","classNames","path","exact","WelcomePage","SettingsPage","GamePage","bg","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00dab706.chunk.js","sourcesContent":["import { SET_QUESTION_COUNT, SET_TIME, SET_CATEGORY } from '../types';\n\nconst DEFAULT_GAME_SETTINGS = {\n    numberOfQuestions: 20,\n    time: \"1\",\n    category: \"All\"\n};\n\nexport default (state = DEFAULT_GAME_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_QUESTION_COUNT:\n            return { ...state, numberOfQuestions: action.payload };\n        case SET_TIME:\n            return { ...state, time: action.payload };\n        case SET_CATEGORY:\n            return {...state, category: action.payload };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport settingsReducer from './SettingsReducer';\nimport questionsReducer from './QuestionsReducer';\n\nexport default combineReducers({\n  settings: settingsReducer,\n  questions: questionsReducer\n});\n","export const SET_QUESTION_COUNT = \"SET_QUESTION_COUNT\";\nexport const SET_TIME = \"SET_TIME\";\nexport const SET_CATEGORY = \"SET_CATEGORY\";\nexport const GET_QUESTIONS = \"GET_QUESTIONS\";\n","import { GET_QUESTIONS } from '../types';\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case GET_QUESTIONS:\n            return { ...state, data: action.payload };\n        default:\n            return state;\n    }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nclass Welcome extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n\n        return (\n            <div className=\"just-centering\">\n                <h1 className=\"game-description\"><b>Got wrecked by ModReg?</b></h1>\n                <h1><b>Discover more modules by taking this quiz!</b></h1>\n                <div className=\"play-btn\">\n                    <Button component={ Link } to=\"/game\" variant=\"contained\" color=\"secondary\" size=\"large\" fullWidth={true}>\n                        Play\n                    </Button>\n                </div>\n                <div className=\"setting-btn\">\n                    <Button component={ Link } to=\"/settings\" variant=\"contained\" color=\"primary\" size=\"large\">\n                        Settings\n                    </Button>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Welcome;\n","const getQuestions = async () => {\n    let response = await fetch(\"./moduleInfo.json\");\n    let data = await response.json();\n\n    return data;\n};\n\nexport default getQuestions;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from \"@material-ui/core/Button/Button\";\nimport { connect } from 'react-redux';\nimport { setNumberOfQuestions, setTime, setCategory } from '../../redux/actions';\nimport Card from '@material-ui/core/Card';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n});\n\nclass Settings extends Component {\n    render() {\n        const { classes, settings } = this.props;\n        const { numberOfQuestions, time, category } = settings;\n\n        return (\n            <div class=\"settingMargin\">\n                <Card raised>\n                    <div class=\"labelTopMargin\">\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"questions\"><span className=\"settingLabel\"><b>Number of Questions</b></span></InputLabel>\n                            <Select\n                                labelId=\"questions\"\n                                id=\"questions\"\n                                value={numberOfQuestions}\n                                onChange={e => this.props.setNumberOfQuestions(e.target.value)}\n                            >\n                                <MenuItem value={5}>5</MenuItem>\n                                <MenuItem value={10}>10</MenuItem>\n                                <MenuItem value={15}>15</MenuItem>\n                                <MenuItem value={20}>20</MenuItem>\n                                <MenuItem value={25}>25</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"difficulty\"></InputLabel>\n                            <InputLabel id=\"time\"><span className=\"settingLabel\"><b>Time (Minutes)</b></span></InputLabel>\n                            <Select\n                                labelId=\"time\"\n                                id=\"time\"\n                                value={time}\n                                onChange={e => this.props.setTime(e.target.value)}\n                            >\n                                <MenuItem value={1}>1</MenuItem>\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"formMarginbottom\">\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"category\" className=\"settingLabel\"><span className=\"settingLabel\"><b>Category</b></span></InputLabel>\n                            <Select\n                                labelId=\"category\"\n                                id=\"category\"\n                                value={category}\n                                onChange={e => this.props.setCategory(e.target.value)}\n                            >\n                                <MenuItem value=\"All\">All</MenuItem>\n                                <MenuItem value=\"Arts and Social Science\">Arts and Social Science</MenuItem>\n                                <MenuItem value=\"Computing\">Computing</MenuItem>\n                                <MenuItem value=\"Cont and Lifelong Education\">Cont and Lifelong Education</MenuItem>\n                                <MenuItem value=\"Dentistry\">Dentistry</MenuItem>\n                                <MenuItem value=\"Design and Environment\">Design and Environment</MenuItem>\n                                <MenuItem value=\"Duke-NUS Medical School\">Duke-NUS Medical School</MenuItem>\n                                <MenuItem value=\"Engineering\">Engineering</MenuItem>\n                                <MenuItem value=\"Institute of Systems Science\">Institute of Systems Science</MenuItem>\n                                <MenuItem value=\"Law\">Law</MenuItem>\n                                <MenuItem value=\"LKY School of Public Policy\">LKY School of Public Policy</MenuItem>\n                                <MenuItem value=\"Logistics Inst-Asia Pac\">Logistics Inst-Asia Pac</MenuItem>\n                                <MenuItem value=\"Multi Disciplinary Programme\">Multi Disciplinary Programme</MenuItem>\n                                <MenuItem value=\"NUS\">NUS</MenuItem>\n                                <MenuItem value=\"NUS Business School\">NUS Business School</MenuItem>\n                                <MenuItem value=\"NUS Graduate School for Int Science and Engineering\">NUS Graduate School for Int Science and Engineering</MenuItem>\n                                <MenuItem value=\"Residential College\">Residential College</MenuItem>\n                                <MenuItem value=\"Risk Management Institute\">Risk Management Institute</MenuItem>\n                                <MenuItem value=\"Science\">Science</MenuItem>\n                                <MenuItem value=\"SSH School of Public Health\">SSH School of Public Health</MenuItem>\n                                <MenuItem value=\"Temasek Defence Sys. Institute\">Temasek Defence Sys. Institute</MenuItem>\n                                <MenuItem value=\"University Scholars Programme\">University Scholars Programme</MenuItem>\n                                <MenuItem value=\"Yale-NUS College\">Yale-NUS College</MenuItem>\n                                <MenuItem value=\"Yong Loo Lin School (Medicine)\">Yong Loo Lin School (Medicine)</MenuItem>\n                                <MenuItem value=\"YST Conservatory of Music\">YST Conservatory of Music</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"labelBottomMargin\">\n                        <Button component={Link} to=\"/\" variant=\"contained\" color=\"primary\">\n                            Save\n                        </Button>\n                    </div>\n                </Card>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    settings: state.settings\n});\n\nexport default withStyles(styles)(connect(mapStateToProps, { setNumberOfQuestions, setTime, setCategory })(Settings));\n","import { SET_QUESTION_COUNT, SET_TIME, SET_CATEGORY, GET_QUESTIONS } from '../types';\nimport getQuestionFromSite from '../../apis/question';\n\nexport const setNumberOfQuestions = (numQuestions) => ({\n    type: SET_QUESTION_COUNT,\n    payload: numQuestions\n});\n\nexport const setTime = (time) => ({\n    type: SET_TIME,\n    payload: time\n});\n\nexport const setCategory = (category) => ({\n    type: SET_CATEGORY,\n    payload: category\n});\n\nexport const getQuestions = () => async (dispatch) => {\n    const response = await getQuestionFromSite();\n    dispatch({ type: GET_QUESTIONS, payload: response });\n};\n","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst Result = ({ score, playAgain }) => (\n    <div className=\"score-board\">\n        <div className=\"score\">\n            <div>You scored {score} / 5 correct answers!</div>\n            <div className=\"play-btn\">\n                <Button variant=\"contained\" color=\"secondary\" onClick={playAgain} fullWidth>\n                    Play Again\n                </Button>\n            </div>\n            <div>\n                <Button component={Link} to=\"/\" variant=\"contained\" color=\"primary\">\n                    Home\n                </Button>\n            </div>\n        </div>\n    </div>\n)\n\nexport default withRouter(Result);\n","import React from 'react';\n\nclass Timer extends React.Component {\n    /*\n        props:\n            minutes\n            seconds\n            onTimeout\n    */\n    constructor(props) {\n        super(props);\n        // || to show default values incase it is empty\n        this.state = {\n            minutes: 3,\n            seconds: 0,\n            onTimeout: this.nullOnTimeout,\n        }\n    }\n\n    nullOnTimeout = () => {\n\n    }\n\n    startTimer = () => {\n        this.myInterval = setInterval(() => {\n            const { seconds, minutes } = this.state\n\n            if (seconds > 0) {\n                this.setState({\n                    seconds: seconds - 1\n                })\n            }\n\n            if (seconds === 0) {\n                if (minutes === 0) {\n                    clearInterval(this.myInterval)\n                    this.state.onTimeout()\n                } else {\n                    this.setState({\n                        minutes: minutes - 1,\n                        seconds: 59\n                    })\n                }\n            }\n        }, 1000)\n\n    }\n    componentDidMount() {\n        var newState = {\n            minutes: 3,\n            seconds: 0,\n            onTimeout: this.props.onTimeout\n        }\n\n        if (this.props.minutes === 0) {\n            newState.minutes = 0\n        } else if (this.props.minutes) {\n            newState.minutes = this.props.minutes\n        }\n\n        if (this.props.seconds === 0) {\n            newState.seconds = 0\n        } else if (this.props.seconds) {\n            newState.seconds = this.props.seconds\n        }\n\n        if (this.props.onTimeout) {\n            newState.onTimeout = this.props.onTimeout\n        }\n\n        this.setState(newState, () => this.startTimer())\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n\n    render() {\n        const { minutes, seconds } = this.state\n        return (\n            <div className='timer'>\n                {minutes === 0 && seconds === 0 ? <h1>Busted!</h1>\n                    : <h1>Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Timer","\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport './game.css';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = {\n    greenBackGround: {\n        background: 'linear-gradient(45deg, white 30%, #90ee90 90%)',\n    },\n    redBackGround: {\n        background: 'linear-gradient(45deg, white 30%, #ed2939 90%)'\n    },\n    scoreBackGround: {\n        background: 'linear-gradient(45deg, #90ee90 30%, #ed2939 90%)',\n        borderRadius: '20px'\n    }\n};\n\nclass GameOver extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            disableButtton: false,\n            nameInput: \"\",\n        };\n    }\n    handleChange = (e) => {\n        let nam = e.target.name;\n        let val = e.target.value;\n        this.setState({\n            [nam]: val\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.setState({\n            disableButtton: true\n        });\n        console.log(\"UPLOAD ME PLZ\");\n        console.log(this.state.nameInput, this.props.score * 100 / this.props.timeTaken);\n        // do some thing online\n    }\n\n    renderQuestion(questionSet, answers, classes) {\n        if (questionSet === null) {\n            return <p>You did not answer any questions.</p>;\n        }\n\n        console.log(answers);\n\n        return (questionSet.map((i, index) => {\n            let answerMod = \"\";\n            let invalidAnswer = false;\n            if (index >= answers.length) {\n                invalidAnswer = true;\n            } else {\n                answerMod = answers[index].moduleCode;\n            }\n            \n            return answerMod === i.moduleCode ? (<ExpansionPanel>\n                <ExpansionPanelSummary className={classes.greenBackGround} expandIcon={<ExpandMoreIcon />} ><strong>(Correct)</strong>&nbsp;{index + 1}. {answers[index].moduleCode} {answers[index].title}</ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <p className=\"text-left\">\n                        <strong>You answered this question correctly.</strong>\n                        <br /><br />\n                        {i.description}\n                    </p>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>) : (<ExpansionPanel>\n                <ExpansionPanelSummary className={classes.redBackGround} expandIcon={<ExpandMoreIcon />}>\n                    <strong>(Wrong)</strong>&nbsp;{index + 1}. {invalidAnswer ? \"Did not answer\" : (answers[index].moduleCode + \" \" + answers[index].title)}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <p className=\"text-left\">\n                        <strong>You answered this question incorrectly.</strong>\n                        <br /><br />\n                        The correct answer was: <strong>{i.moduleCode} {i.title}.</strong>\n                        <br /><br />\n                        {i.description}</p>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>);\n        }\n        )\n        );\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className=\"white-background space-top\">\n                <div className=\"question-container\">\n                    <h1 className=\"feedback-text game-over-text\">Game Over!</h1>\n\n                    <div className=\"score-panel-container\">\n                        <Card className={classes.scoreBackGround}>\n                            <h2>Correct Answers: {this.props.score}</h2>\n                            <h2>Time Taken: {this.props.timeTaken.toFixed(2)} seconds</h2>\n                            <h2>Final Score: {(this.props.score * 100 / this.props.timeTaken).toFixed(2)}</h2>\n                        </Card>\n                    </div>\n                    {/*<form onSubmit={this.handleSubmit} >\n                        <input type=\"text\" onChange={this.handleChange} name=\"nameInput\" value={this.state.nameInput} placeholder=\"Name\" autoComplete=\"off\" disabled={this.state.disableButtton} />\n                        <input type=\"submit\" disabled={this.state.disableButtton} />\n                    </form>*/}\n                    <h3>Your Answers: </h3>\n                    {this.renderQuestion(this.props.questionSet, this.props.answers, classes)}\n\n                    <div className=\"play-btn\">\n                        <Button component={Link} to=\"/game\" variant=\"contained\" color=\"secondary\" size=\"large\" fullWidth onClick={() => this.props.playAgain()}>\n                            Play Again\n                            </Button>\n                    </div>\n                    <div className=\"setting-btn\">\n                        <Button component={Link} to=\"/\" variant=\"contained\" color=\"primary\" size=\"large\">\n                            Home\n                            </Button>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(GameOver);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport QuestionBox from \"./QuestionBox\";\nimport Result from \"./Result\";\nimport Timer from './Timer';\nimport GameOver from './GameOver'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport './game.css';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { getQuestions } from '../../redux/actions';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = {\n    root: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        color: 'white',\n        fontWeight: 'bold',\n    },\n};\n\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"current\", new Date().getTime() / 1000)\n        this.state = {\n            score: 0,\n            responses: 0,\n            showResult: false,\n            exitGame: false,\n            questionSet: null,\n            question: 0,\n            feedback: \"Answer as fast as you can!\",\n            answers: [],\n            startTime: new Date().getTime() / 1000,\n            endTime: new Date().getTime() / 1000,\n        };\n    }\n\n    computeAnswer = (questions, answer, correctAnswer) => {\n        let result = false;\n        if (answer.moduleCode === correctAnswer) {\n            result = true;\n            this.setState((prevState, props) => ({\n                score: prevState.score + 1,\n                feedback: \"Fantastic!\",\n            }));\n        } else {\n            this.setState({\n                feedback: \"That wasn't correct...\",\n            });\n        }\n        this.setState((prevState, props) => ({\n            questionSet: questions,\n            responses: prevState.responses < this.props.numberOfQuestions ? prevState.responses + 1 : this.props.numberOfQuestions,\n            answers: [...prevState.answers, answer]\n        }));\n\n        return result;\n    };\n\n    playAgain = () => {\n        const { settings } = this.props;\n        //condition fails during render\n        window.scrollTo(0, 0);\n        this.setState({\n            score: 0,\n            responses: 0,\n            showResult: false,\n            questionSet: null,\n            question: 0,\n            feedback: \"Answer as fast as you can!\",\n            answers: [],\n            startTime: new Date().getTime() / 1000\n        });\n    };\n\n\n    exitGame = () => {\n        //condition fails during render\n        window.scrollTo(0, 0);\n        this.setState({\n            score: 0,\n            responses: 0,\n            showResult: false,\n            exitGame:true,\n            questionSet: null,\n            question: 0,\n            feedback: \"Answer as fast as you can!\",\n            answers: [],\n            startTime: new Date().getTime() / 1000\n        });\n    };\n\n    componentDidMount() {\n        if (this.props.questions && this.props.questions.length === 0) {\n            this.props.getQuestions();\n        }\n    }\n\n    handleTimeout = () => {\n        this.setState({\n            showResult: true,\n            endTime: new Date().getTime() / 1000\n        })\n    }\n\n    getQuestionSet() {\n        const { settings, questions } = this.props;\n        const { numberOfQuestions } = settings;\n\n        if (questions === null || questions.length === 0) {\n            return null;\n        }\n\n        console.log(\"Question set called\", questions);\n\n        // Copy array and filter it\n        let array = questions.data\n            .slice(0, questions.data.length)\n            .filter(i => i.description.trim() !== \"\" && !i.moduleCode.endsWith(\"R\"))\n            .filter(i => i.faculty.includes(settings.category) || settings.category === \"All\");\n\n        // Shuffle array\n        const shuffled = array.sort(() => 0.5 - Math.random());\n\n        // Get sub-array of first n elements after shuffled\n        const questionSet = shuffled.slice(0, numberOfQuestions);\n\n        //console.log(questionSet);\n\n        return questionSet;\n    }\n\n    handleClick(e, questions, answer) {\n        e.preventDefault();\n        const userInputValue = e.currentTarget.value;\n\n        let result = this.computeAnswer(questions, questions.filter(item => item.moduleCode === userInputValue)[0], answer);\n\n        if (this.state.question === this.props.numberOfQuestions - 1) {\n            this.setState({\n                showResult: true,\n                endTime: new Date().getTime() / 1000\n            });\n            return;\n        }\n\n        this.setState((prevState, props) => ({\n            question: prevState.question + 1\n        }));\n        console.log(\"Result was\", result);\n    }\n    showGameOver(classes) {\n        return (\n        <div className=\"white-background\">\n            <br />\n            <h1>Game over</h1>\n            <h2>Score: {this.state.score}</h2>\n            <h2>Time: {new Date().getTime()/1000 - this.state.startTime}</h2>\n            <p>Answers: </p>\n            {this.state.questionSet ?\n                this.state.questionSet.map((i, index) => <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}><div>{index + 1}. {i.moduleCode} {i.title}</div></ExpansionPanelSummary>\n                    <ExpansionPanelDetails><div><p className=\"text-left\">{i.description}</p></div></ExpansionPanelDetails>\n                </ExpansionPanel>)\n                : <p>You did not answer anything!</p>\n            }\n            <div className=\"play-btn\">\n                <Button component={Link} to=\"/game\" variant=\"contained\" color=\"secondary\" size=\"large\" fullWidth onClick={() => this.playAgain()}>\n                    Play Again\n                    </Button>\n            </div>\n            <div className=\"setting-btn\">\n                <Button component={Link} to=\"/\" variant=\"contained\" color=\"primary\" size=\"large\">\n                    Home\n                    </Button>\n            </div>\n        </div>\n        );\n    }\n\n    render() {\n        const { questions, classes } = this.props;\n\n        if (questions.length === 0) {\n            return <div className=\"loading-design\">Loading...</div>;\n        }\n\n        if (this.state.question >= this.props.settings.numberOfQuestions || this.state.showResult || this.state.exitGame) {\n            return <GameOver \n                score={this.state.score} \n                timeTaken={new Date().getTime() / 1000 - this.state.startTime} \n                questionSet={this.state.questionSet} \n                playAgain={this.playAgain}\n                answers={this.state.answers}\n                />\n        }\n\n        const questionSet = this.state.questionSet === null ? this.getQuestionSet() : this.state.questionSet;\n        const question = questionSet[this.state.question];\n\n        console.log(question);\n\n        const answers = [];\n        answers.push(question);\n\n        let arr = questionSet.slice(0, questionSet.length);\n        const shuffled = arr.sort(() => 0.5 - Math.random());\n\n        let i = -1;\n        while (answers.length < 4) {\n            i++;\n\n            if (i >= shuffled.length) {\n                break;\n            }\n\n            if (shuffled[i].moduleCode === question.moduleCode) {\n                continue;\n            }\n\n            answers.push(shuffled[i]);\n        }\n\n        answers.sort(() => 0.5 - Math.random());\n        console.log(answers);\n\n        let feedbackClasses = \"feedback-text\";\n        if (this.state.feedback === \"Fantastic!\") {\n            feedbackClasses += \" positive-shadow\";\n        } else if (this.state.feedback === \"That wasn't correct...\") {\n            feedbackClasses += \" negative-shadow\";\n        }\n\n        return (\n            <div className=\"white-background\">\n                <div className=\"question-container\">\n                    <Grid\n                        container\n                        direction=\"row\">\n                            <Grid item xs={3} className=\"question\"></Grid>\n                            <Grid item xs={6} className=\"question\">\n                                <p className={feedbackClasses}>{this.state.feedback}</p>\n                                <hr />\n                                <p className=\"question-text\">{question.description.substring(0, question.description.indexOf('.') + 1)}</p>\n\n                            </Grid>\n                            <Grid item xs={3} className=\"question\">\n                            <CountdownCircleTimer\n                                // isLinearGradient={true}\n                                size={80}\n                                isPlaying\n                                durationSeconds={this.props.settings.time * 60}\n                                colors={[\n                                    ['#00ff00', .33],\n                                    ['#F7B801', .33],\n                                    ['#ff0000']\n                                ]}\n                                renderTime={(remainingTime) => {\n                                    return (\n                                        <div>\n                                            {remainingTime}\n                                        </div>\n                                    )\n                                }}\n                                onComplete={this.handleTimeout}\n                            />\n                            <p>{this.state.question} / {questionSet.length} answered</p>\n                            </Grid>\n                        <Grid item xs={12}>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className=\"make-it-smaller\">\n                                <Button className={classes.root} size=\"large\" variant=\"contained\" fullWidth value={answers[0].moduleCode} onClick={e => this.handleClick(e, questionSet, question.moduleCode)}>A) {answers[0].moduleCode} {answers[0].title}</Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className=\"make-it-smaller\">\n                                <Button size=\"large\" variant=\"contained\" className={classes.root} fullWidth value={answers[1].moduleCode} onClick={e => this.handleClick(e, questionSet, question.moduleCode)}>B) {answers[1].moduleCode} {answers[1].title}</Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className=\"make-it-smaller\">\n                                <Button size=\"large\" variant=\"contained\" className={classes.root} fullWidth value={answers[2].moduleCode} onClick={e => this.handleClick(e, questionSet, question.moduleCode)}>C) {answers[2].moduleCode} {answers[2].title}</Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className=\"make-it-smaller\">\n                                <Button size=\"large\" variant=\"contained\" className={classes.root} fullWidth value={answers[3].moduleCode} onClick={e => this.handleClick(e, questionSet, question.moduleCode)}>D) {answers[3].moduleCode} {answers[3].title}</Button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <div className=\"play-btn\">\n                        <Button component={Link} to=\"/\" variant=\"contained\" color=\"secondary\" size=\"large\" fullWidth onClick={() => this.exitGame()}>\n                            Exit Game\n                        </Button>\n                    </div>\n                </div>\n            </div>\n\n        );\n\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    settings: state.settings,\n    questions: state.questions\n});\n\nexport default withStyles(styles)( connect(mapStateToProps, { getQuestions })(Game));\n","import React from 'react';\nimport WelcomePage from './components/Welcome';\nimport SettingsPage from './components/Settings';\nimport GamePage from './components/Game';\nimport './assets/App.css'\nimport { ScalingSquaresSpinner } from \"react-epic-spinners\";\nimport ParticlesBg from 'particles-bg';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch\n} from 'react-router-dom';\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"App-header\">\n                <div className=\"game-title\">\n                    <h1 className=\"game-title-font\"><b>ModWreck</b></h1>\n                </div>\n                <div className=\"spinner-container\">\n                    <ScalingSquaresSpinner color=\"#e1e1e1\" size=\"150\" className=\"spinner\" />\n                </div>\n            </div>\n            <div>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <TransitionGroup>\n                            <CSSTransition timeout={300} classNames='fade'>\n                                <Switch>\n                                    <Route path=\"/\" exact component={WelcomePage} />\n                                    <Route path=\"/settings\" component={SettingsPage} />\n                                    <Route path=\"/game\" component={GamePage} />\n                                    <Route component={() => (<div>404 Not Found</div>)} />\n                                </Switch>\n                            </CSSTransition>\n                        </TransitionGroup>\n                    </div>\n                </Router>\n            </div>\n            <ParticlesBg type=\"circle\" bg={true} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './assets/style.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}